<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="feign.codec.ErrorDecoder"/>
    <fullyQualifiedTypeName name="org.springframework.web.server.ResponseStatusException"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="com.example.userservice.error.FeignErrorDecoder"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.EnableKafka"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.consumer.Consumer"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.DefaultKafkaConsumerFactory"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.consumer.ConsumerConfig"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.serialization.StringDeserializer"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.ConsumerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory"/>
    <fullyQualifiedTypeName name="com.example.catalogsservice.repository.CatalogRepository"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.KafkaListener"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.core.type.TypeReference"/>
    <fullyQualifiedTypeName name="com.example.catalogsservice.entity.CatalogEntity"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.ProducerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.DefaultKafkaProducerFactory"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.producer.ProducerConfig"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.serialization.StringSerializer"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.KafkaTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.data.domain.jaxb.SpringDataJaxb.OrderDto"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.ObjectMapper"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.core.JsonProcessingException"/>
    <fullyQualifiedTypeName name="com.example.orderservice.messagequeue.KafkaProducer"/>
    <fullyQualifiedTypeName name="java.util.UUID"/>
    <fullyQualifiedTypeName name="com.example.orderservice.dto.OrderDto"/>
    <fullyQualifiedTypeName name="lombok.Builder"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="java.io.Serializable"/>
    <fullyQualifiedTypeName name="com.example.orderservice.dto.Payload"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="com.example.orderservice.dto.Field"/>
    <fullyQualifiedTypeName name="com.example.orderservice.dto.Schema"/>
    <fullyQualifiedTypeName name="com.example.orderservice.dto.KafkaOrderDto"/>
    <fullyQualifiedTypeName name="com.example.orderservice.messagequeue.OrderProducer"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.CircuitBreakerFactory"/>
    <fullyQualifiedTypeName name="lombok.RequiredArgsConstructor"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.Customizer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JCircuitBreakerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="com.thoughtworks.xstream.core.util.Pool.Factory"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JConfigBuilder"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.circuitbreaker.CircuitBreakerConfig"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.circuitbreaker.CircuitBreakerConfig.SlidingWindowType"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.timelimiter.TimeLimiterConfig"/>
    <fullyQualifiedTypeName name="java.time.Duration"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.CircuitBreaker"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.example.userservice.vo.ResponseOrder"/>
    <fullyQualifiedTypeName name="java.lang.Throwable"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="io.micrometer.core.annotation.Timed"/>
</qualifiedTypeNameHistroy>
